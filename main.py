import logging
from telegram.ext import CommandHandler, Application, MessageHandler, filters, ConversationHandler
from telegram import ReplyKeyboardMarkup
import csv
import requests
from bs4 import BeautifulSoup as b

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG)
logger = logging.getLogger(__name__)


async def start(update, context):
    reply_keyboard = [['/data', '/zodiac', '/natal'], ['/horoscope', '/compatibility']]
    markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=False)

    user = update.effective_user
    new_user = True

    with open('user_data.csv', encoding="utf8") as csvfile:
        reader = list(csv.DictReader(csvfile, delimiter=';', quotechar='"'))
        for row in reader:
            if row['id'] == str(user.id):
                new_user = False

    if new_user:
        await update.message.reply_text(f'–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n'
                                        '\n'
                                        '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤. –î–ª—è —ç—Ç–æ–≥–æ –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /questionary.\n'
                                        '–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞–∂–º–∏—Ç–µ /help', reply_markup=markup)

    else:
        await update.message.reply_text(f'–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n'
                                        '\n'
                                        '–†–∞–Ω–µ–µ –≤—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —ç—Ç–æ—Ç –±–æ—Ç. –ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /data\n'
                                        '–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞–∂–º–∏—Ç–µ /help', reply_markup=markup)


async def help_command(update, context):
    await update.message.reply_text('/data - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–±–µ\n'
                                    '/zodiac - —É–∑–Ω–∞—Ç—å —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞\n'
                                    '/horoscope - –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n'
                                    '/natal - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É\n'
                                    '/compatibility - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –¥—Ä—É–≥–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º')


async def text_handler(update, context):
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É.")


def main():
    token_tgb = '7193208629:AAE4UJ5w3dlRZGVJvPe5PRNVbWzMjEClIwQ'
    application = Application.builder().token(token_tgb).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))

    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, text_handler))

    application.run_polling()


if __name__ == '__main__':
    main()
